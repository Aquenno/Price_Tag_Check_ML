import cv2
import easyocr
from ultralytics import YOLO
import gradio as gr

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π
model = YOLO("C:/Users/user/Desktop/Price_Tag_Check_ML/runs/detect/train6/weights/best.pt")
reader = easyocr.Reader(["ru"])

def process_image(img):
    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    img_bgr = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)
    
    # –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    class_data = {0: [], 1: [], 2: [], 3: [], 4: []}
    
    # –î–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
    results = model(img_bgr)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    for box in results[0].boxes:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ bbox
        bbox = box.xyxy[0].cpu().numpy()
        x1, y1, x2, y2 = map(int, bbox)
        cls_id = int(box.cls)
        
        # –û–±—Ä–µ–∑–∫–∞ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        cropped = img_bgr[y1:y2, x1:x2]
        text = reader.readtext(cropped, detail=0)
        combined_text = ' '.join(text).strip()
        
        if cls_id in class_data:
            class_data[cls_id].append((x1, combined_text))
    
    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ X
    sorted_texts = {}
    for cls_id in class_data:
        sorted_texts[cls_id] = [text for _, text in sorted(class_data[cls_id], key=lambda x: x[0])]
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    description = ' '.join(sorted_texts[0]) if sorted_texts[0] else "–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
    
    price_normal = ', '.join(sorted_texts[3] + sorted_texts[1]) 
    if not price_normal: 
        price_normal = "–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        
    price_card = ', '.join(sorted_texts[4] + sorted_texts[2])
    if not price_card:
        price_card = "–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"

    return description, price_normal, price_card

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
interface = gr.Interface(
    fn=process_image,
    inputs=gr.Image(label="–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–Ω–Ω–∏–∫–∞"),
    outputs=[
        gr.Textbox(label="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞", placeholder="–û–ø–∏—Å–∞–Ω–∏–µ..."),
        gr.Textbox(label="–¶–µ–Ω–∞ –±–µ–∑ –∫–∞—Ä—Ç—ã", placeholder="–¶–µ–Ω–∞..."),
        gr.Textbox(label="–¶–µ–Ω–∞ –ø–æ –∫–∞—Ä—Ç–µ", placeholder="–¶–µ–Ω–∞...")
    ],
    title="üì∑ CV –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ü–µ–Ω–Ω–∏–∫–æ–≤ –Ω–∞ –ø–æ–ª–∫–∞—Ö",
    description="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ —Ü–µ–Ω–Ω–∏–∫–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞",
    allow_flagging="never"
)

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    interface.launch(share=False)